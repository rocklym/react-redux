# 应用架构
1.代码文件的组织结构
a.如果按MVC的模式去按角色组织（action一类，reducer一类），修改一个功能就得修改多个文件，十分繁琐
b.Redux应用适合于按功能组织划分结构，TodoList一个组织，Filter一个组织，因为，“我们应该通过代码就能增加系统的功能，而不是通过对现有代码的修改来增加功能”
2.确定模块的边界
3.Store的状态树设计
